package application;
	
import javafx.application.Application;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.*;
import javafx.scene.control.*;


public class Main extends Application {
	//need database or file-system for all the books
	//need database of users
	//book class
	//basically need to permanently save everything
	Button LogInButton1 = new Button ("Login");
	
	
	
	
	TextField userName = new TextField();
	TextField passWord = new TextField();
	VBox loginVBox = new VBox();

	BorderPane browsingPane = new BorderPane();
	BorderPane cartPane = new BorderPane();
	BorderPane sellPane = new BorderPane();
	
	Scene indivBookS;
	Scene sellBookS;
	
	
	
	Scene browsingPageS;
	VBox  listOfMerchHere = new VBox();
	VBox  cartVBox = new VBox();
	VBox  sellVBox = new VBox();
	HBox  browsingHeader = new HBox();
	HBox searchOptions = new HBox();
	
	Scene CartS;
	Book myBook;
	
	Stage stage1;
	
	public void start(Stage primaryStage) {
		try {
			stage1 = primaryStage;
			BorderPane root = new BorderPane();
			loginVBox.getChildren().addAll(userName,passWord,LogInButton1);
			root.setCenter(loginVBox);
			//login Scene should be here
			Scene scene = new Scene(root,400,400);
			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
			stage1.setScene(scene);
			LogInButton1.setOnAction(e->stage1.setScene(browsingPageS));
			//different scenes we are switching between
			indivBookS = createBookPage();
			sellBookS = createBook2Sell();
			browsingPageS = createBrowsingPage();
			CartS = createCart();
			
			stage1.show();
			//Load automatically to browsing page after login, then depending on clicks switch scenes
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	

	
	//scene to list a book
	Scene createBook2Sell() {
		Button goBack = new Button ("Back");
		Label sellHere = new Label("Add Book to MarketPlace Page");
		sellBookS = new Scene(sellPane,400,400);
		sellVBox.getChildren().addAll(sellHere, goBack);
		sellPane.setCenter(sellVBox);
		
		goBack.setOnAction(e-> stage1.setScene(browsingPageS));
		return sellBookS;
	}
	
	//scene for user marketplace (what they have sold, ect.)?
	
	Scene createBookPage(){
		//scene for individual book, should display book user clicked on
		Button add2cart = new Button("Add to Cart");//this should be in each
		return indivBookS;
		//like the viewBook() method
		//probably need an individual book class
	}
	
	//scene for browsing page, all books here, should be able to sort through them
	Scene createBrowsingPage() {
		Label merchHere = new Label("List of Books" + "/n"+ "should be here");
		Label search = new Label("Search Options Should Go Here");
		Button sellB = new Button ("Click to Sell Book");
		Button cartB = new Button ("Cart");
		searchOptions.getChildren().addAll(search);
		browsingHeader.getChildren().addAll(sellB,cartB);
		listOfMerchHere.getChildren().addAll(searchOptions,merchHere);
		browsingPageS = new Scene(browsingPane,400,400);
		
		browsingPane.setCenter(listOfMerchHere);
		browsingPane.setTop(browsingHeader);
		
		
		
		sellB.setOnAction(e->stage1.setScene(sellBookS));
		cartB.setOnAction(e->stage1.setScene(CartS));
		
		
		//need a drop-down menu and some sorting and searching options, along with corresponding methods(alphabetically, condition, ect)
		return browsingPageS;
	}
	
	//scene for shopping cart, accessed via shopping cart button
	Scene createCart() {
		Button goBack = new Button ("Back");
		Label cartLabel = new Label ("Shopping Cart Page");
		CartS = new Scene(cartPane,400,400);
		cartVBox.getChildren().addAll(cartLabel,goBack);
		cartPane.setCenter(cartVBox);
		goBack.setOnAction(e-> stage1.setScene(browsingPageS));
		return CartS;
		
		//viewCart()
	}
	
	
	
	public static void main(String[] args) {
		launch(args);
	}
}
